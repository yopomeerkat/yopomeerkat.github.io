{"version":3,"file":"static/webpack/static/development/pages/index.js.f664755fd8d8fdab3a2b.hot-update.js","sources":["webpack:///./pages/_/investment.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n\tForm,\n\tCard,\n\tButton,\n\tImage,\n\tIcon,\n\tPopup,\n\tGrid,\n\tSegment,\n\tHeader,\n\tInput,\n\tMessage,\n\tList,\n\tTable,\n\tLabel\n} from \"semantic-ui-react\";\nimport { YoIcon, Spin } from \"../../components/youi\";\nimport config from \"../../components/config\";\nimport { toastMessage } from \"./toasts\";\nimport w3, { getAccount } from \"../../components/w3\";\nimport convert from \"../../utils/convert\";\nimport etherscan from \"../../components/etherscan\";\n\nexport default class Investment extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { price: 5, loading: false, invested: [] };\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.onInvest = this.onInvest.bind(this);\n\t\tthis.onWithdraw = this.onWithdraw.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.reload();\n\t}\n\n\tonInvest = async () => {\n\t\tthis.onTx(this.state.price);\n\t};\n\n\tonWithdraw = async () => {\n\t\tthis.onTx(0);\n\t};\n\n\tloadWeb3 = async loading => {\n\t\tlet web3Instance;\n\t\tlet contractInstance;\n\t\tlet account;\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tconst { web3, contract } = w3();\n\t\t\t\tweb3Instance = web3;\n\t\t\t\tcontractInstance = contract;\n\t\t\t\taccount = await getAccount();\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.log(ex);\n\t\t\t\treturn (\n\t\t\t\t\t!loading &&\n\t\t\t\t\ttoastMessage({\n\t\t\t\t\t\tevent: \"error\",\n\t\t\t\t\t\tmessage: \"Fails to connect ethereum blockchain!\"\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!account) {\n\t\t\t\t!loading &&\n\t\t\t\t\ttoastMessage({\n\t\t\t\t\t\tevent: \"error\",\n\t\t\t\t\t\tmessage: \"Fails to load ETH account.\"\n\t\t\t\t\t});\n\t\t\t\t//console.log(\"web3 3:\", web3Instance);\n\t\t\t\t//return { web3: web3Instance, contract: contractInstance};\n\t\t\t}\n\t\t\tconsole.log(account);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t\t//console.log(\"web3 2:\", web3Instance);\n\t\treturn { web3: web3Instance, contract: contractInstance, account };\n\t};\n\n\treload = async () => {\n\t\tthis.setState({ loading: true });\n\t\ttry {\n\t\t\tconst { web3, contract, account } = await this.loadWeb3(true);\n\n\t\t\tif (account) {\n\t\t\t\tconst rate = await contract.methods.rates(account).call();\n\t\t\t\tconst investWei = await contract.methods\n\t\t\t\t\t.balance(account)\n\t\t\t\t\t.call();\n\t\t\t\tconst investETH = convert.eth(web3, investWei, 3);\n\t\t\t\tconst withdrawWei = await contract.methods\n\t\t\t\t\t.payoutAmount()\n\t\t\t\t\t.call({ from: account });\n\t\t\t\tconst withdrawETH = convert.eth(web3, withdrawWei, 3);\n\t\t\t\tconsole.log(`invested: ${investETH}`);\n\t\t\t\tthis.setState({\n\t\t\t\t\trate: rate/10,\n\t\t\t\t\tinvestETH,\n\t\t\t\t\twithdrawETH\n\t\t\t\t});\n\t\t\t\t//console.log(`invested: ${investETH}`);\n\t\t\t}\n\n\t\t\tlet invested = await etherscan.getBets(web3);\n\t\t\t// if (contract) {\n\t\t\t// \tconst allBets = await contract.methods.getBets(20).call();\n\t\t\t// \tconsole.log(\"---------all bets---------\");\n\t\t\t// \tfor (let i = 0; i < allBets[0].length; i++) {\n\t\t\t// \t\tconst eth = convert.eth(web3, allBets[1][i]);\n\t\t\t// \t\tconst addr = convert.shortAddress(allBets[0][i]);\n\t\t\t// \t\tinvested.push({\n\t\t\t// \t\t\taddr,\n\t\t\t// \t\t\teth,\n\t\t\t// \t\t\trate: allBets[2][i],\n\t\t\t// \t\t\tdate: allBets[3][i]\n\t\t\t// \t\t});\n\t\t\t// \t}\n\t\t\t// \tconsole.log(invested);\n\t\t\t// } else {\n\t\t\t// \tinvested = await etherscan.getBets(web3);\n\t\t\t// }\n\n\t\t\tthis.setState({\n\t\t\t\tinvested,\n\t\t\t\tloading: false\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t};\n\n\tonTx = async val => {\n\t\t//this.setState({ loading: true });\n\t\ttry {\n\t\t\tlet { web3, account } = await this.loadWeb3();\n\n\t\t\tweb3.eth.sendTransaction(\n\t\t\t\t{\n\t\t\t\t\tto: config.address(),\n\t\t\t\t\tfrom: account,\n\t\t\t\t\tvalue: convert.wei(web3, val)\n\t\t\t\t},\n\t\t\t\tfunction(err, transactionHash) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t// if (err.code == \"-32603\") {\n\t\t\t\t\t\t// \treturn toastMessage({\n\t\t\t\t\t\t// \t\tevent: \"error\",\n\t\t\t\t\t\t// \t\tmessage: \"You've just rejected your transaction. COME ON, Don't lose this chance.\"\n\t\t\t\t\t\t// \t});\n\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// return toastMessage({\n\t\t\t\t\t\t// \tevent: \"error\",\n\t\t\t\t\t\t// \tmessage: \"There was a problem!: \" + err.message\n\t\t\t\t\t\t// });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttoastMessage(\n\t\t\t\t\t\t\"Transaction sent. Waining for confirmation...\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tthis.setState({ status: \"submit\", loading: false });\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\tthis.setState({ loading: false });\n\t\t}\n\t};\n\n\thandleChange = (e, { name, value }) => {\n\t\tthis.setState({ [name]: value, error: \"\" });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Segment\n\t\t\t\tid=\"invest\"\n\t\t\t\tstyle={{ padding: \"0em 0em\", margin: \"1em 0em\" }}\n\t\t\t\tvertical\n\t\t\t>\n\t\t\t\t<Grid verticalAlign=\"top\">\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\n\t\t\t\t\t\t\t<h1 className=\"title\">Investment</h1>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Segment inverted>\n\t\t\t\t\t\t\t\t<Grid stackable verticalAlign=\"top\">\n\t\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\n\t\t\t\t\t\t\t\t\t\t\tWhen you havd installed the\n\t\t\t\t\t\t\t\t\t\t\tMetamask, you can directly use the\n\t\t\t\t\t\t\t\t\t\t\tbelow functions of 'INVEST' &\n\t\t\t\t\t\t\t\t\t\t\t'WITHDRAW'.\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: \"ETH\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"ETH INVESTED\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.price}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"0.5em\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"0.8em\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t// error={\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tthis.state.valid[\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\"price\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.onInvest}\n\t\t\t\t\t\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tINVEST\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.onWithdraw}\n\t\t\t\t\t\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tWITHDRAW\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.error && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\t\t\t\theader=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent={this.state.error}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\n\t\t\t\t\t\t\t\t\t\t\tYour interest rate:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t{this.state.rate > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"yo-light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.rate} %\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{(this.state.rate || 0) == 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t(will show after invested)\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t{this.state.investETH > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\tTotal invested:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"yo-light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.investETH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAvailable profit:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"yo-light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.withdrawETH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t(refresh hourly)\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<Table celled color=\"blue\" inverted>\n\t\t\t\t\t\t\t\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInvestor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tETH\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.invested.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Row\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i + \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tribbon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"pink\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{x.addr}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{x.rate/10}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;%\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{x.eth}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Table.Body>\n\t\t\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</Segment>\n\t\t);\n\t}\n}\n"],"mappings":"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","sourceRoot":""}